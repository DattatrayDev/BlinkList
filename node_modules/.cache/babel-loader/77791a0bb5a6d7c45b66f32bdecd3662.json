{"ast":null,"code":"var _jsxFileName = \"/home/dattd/Desktop/BlinkListApp-React/src/Components/pages/EntrepreneurPage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Container, Box } from '@mui/material';\nimport Input from '../../atoms/Input';\nimport { Search } from '@mui/icons-material';\nimport Card from '../../organisms/Card';\nimport Typography from '../../atoms/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { makeStyles } from '@mui/styles';\nimport theme from '../../../Themes/main';\nimport Banner1 from '../../molecules/Banner1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  input: {\n    margin: `${theme.spacing(5)} 0px`,\n    height: theme.spacing(6),\n    width: '100%',\n    maxWidth: '658px',\n    fontWeight: 'bold',\n    fontSize: '20px'\n  },\n  heading: {\n    fontWeight: '700',\n    marginTop: '75px',\n    display: 'flex',\n    jusstifyContent: 'start',\n    color: \"#03314B\",\n    fontSize: '24px'\n  },\n  main: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center'\n  }\n});\n\nconst EntrepreneurComp = _ref => {\n  _s();\n\n  let {\n    books,\n    setBooks,\n    data,\n    setData,\n    library,\n    setLibrary,\n    ...props\n  } = _ref;\n  const classes = useStyles();\n\n  const checkInLibrary = bookId => {\n    let checker = curr => {\n      for (let currData of curr) {\n        if (currData.id === bookId) {\n          return {\n            status: true,\n            progress: currData.progress\n          };\n        }\n      }\n\n      return {\n        status: false\n      };\n    };\n\n    let inCurrRead = checker(library.currentlyReading);\n    return inCurrRead.status ? inCurrRead : checker(library.finishedBook);\n  };\n\n  const libraryHandler = async (bookId, setBookStatus) => {\n    library.currentlyReading.push({\n      \"id\": bookId,\n      \"progress\": 0\n    });\n    setLibrary(library);\n    setBookStatus(true);\n    let res = await fetch(\"http://localhost:3000/library/\", {\n      method: \"PUT\",\n      body: JSON.stringify(library),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.json();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      marginBottom: '100px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Banner1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      className: classes.input,\n      startIcon: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 57\n      }, this),\n      placeholder: \"Search by title or author\",\n      sx: {\n        display: 'flex',\n        jusstifyContent: 'start'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: data.map(curr => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          \"data-testid\": \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.heading,\n            sx: {},\n            children: curr.heading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.main,\n            children: !library ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              \"data-testid\": \"circular-progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 34\n            }, this) : curr.books.map(currData => {\n              currData = books[currData.id];\n              const inLibrary = checkInLibrary(currData.id);\n              return /*#__PURE__*/_jsxDEV(Card, {\n                cardId: currData.id,\n                imgHeight: 240,\n                url: currData.url,\n                bookName: currData.name,\n                writerName: currData.writerName,\n                timeRead: currData.timeRead,\n                width: 280,\n                inLibrary: inLibrary.status,\n                progress: inLibrary.progress,\n                libraryHandler: libraryHandler\n              }, currData.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 48\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EntrepreneurComp, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = EntrepreneurComp;\nexport default EntrepreneurComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntrepreneurComp\");","map":{"version":3,"sources":["/home/dattd/Desktop/BlinkListApp-React/src/Components/pages/EntrepreneurPage/index.tsx"],"names":["Container","Box","Input","Search","Card","Typography","CircularProgress","makeStyles","theme","Banner1","useStyles","input","margin","spacing","height","width","maxWidth","fontWeight","fontSize","heading","marginTop","display","jusstifyContent","color","main","flexWrap","alignItems","EntrepreneurComp","books","setBooks","data","setData","library","setLibrary","props","classes","checkInLibrary","bookId","checker","curr","currData","id","status","progress","inCurrRead","currentlyReading","finishedBook","libraryHandler","setBookStatus","push","res","fetch","method","body","JSON","stringify","headers","json","marginBottom","map","inLibrary","url","name","writerName","timeRead"],"mappings":"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","sourcesContent":["import {Container, Box} from '@mui/material'\nimport Input from '../../atoms/Input';\nimport {Search} from '@mui/icons-material';\nimport Card from '../../organisms/Card';\nimport Typography from '../../atoms/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { makeStyles } from '@mui/styles';\nimport theme from '../../../Themes/main'\nimport Banner1 from '../../molecules/Banner1';\n\nconst useStyles = makeStyles({\n    input: {\n        margin: `${theme.spacing(5)} 0px`,\n        height: theme.spacing(6),\n        width: '100%',\n        maxWidth: '658px',\n        fontWeight: 'bold',\n        fontSize: '20px'\n    },\n    heading: {\n        fontWeight: '700',\n        marginTop: '75px',\n        display:'flex',\n        jusstifyContent:'start',\n        color:\"#03314B\",\n        fontSize:'24px'\n    },\n    main: {\n        display: 'flex', \n        flexWrap: 'wrap', \n        alignItems: 'center'\n    }\n});\n\n\nconst EntrepreneurComp = ({books, setBooks, data, setData, library, setLibrary, ...props}:any)=>{\n    const classes = useStyles();\n    const checkInLibrary = (bookId:any)=>{\n        let checker = (curr:any) => {\n            for(let currData of curr){\n                if(currData.id === bookId){\n                    return {status: true, progress : currData.progress};\n                }\n            }\n            return {status: false};\n        }\n        let inCurrRead = checker(library.currentlyReading)\n        return inCurrRead.status ? inCurrRead : checker(library.finishedBook);\n    }\n\n    const libraryHandler = async (bookId:any, setBookStatus:any) => {\n        \n            library.currentlyReading.push({\n                \"id\" : bookId,\n                \"progress\" : 0\n            });\n            setLibrary(library);\n            setBookStatus(true);\n            let res = await  fetch(\"http://localhost:3000/library/\", {\n              method: \"PUT\",\n              body: JSON.stringify(library),\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            });\n            return res.json();\n          \n    }\n    return (\n        <Container sx={{marginBottom:'100px'}}>\n           \n            <Banner1/>\n            <Input className={classes.input} startIcon={<Search />} placeholder=\"Search by title or author\" sx={{display:'flex',jusstifyContent:'start'}} />\n            <Box>\n                {\n                data.map((curr:any)=>{\n                    return <Box data-testid='container'>\n                        <Typography className={classes.heading} sx={{}}>\n                            {curr.heading}\n                        </Typography>\n                        <Box className={classes.main}>\n                            {  \n                                !library ?\n                                 <CircularProgress data-testid='circular-progress' /> :\n                                    curr.books.map((currData:any) => {\n                                        currData = books[currData.id];\n                                        const inLibrary = checkInLibrary(currData.id)\n                                        return <Card \n                                            cardId={currData.id}\n                                            key={currData.id}\n                                            imgHeight= {240}\n                                            url= {currData.url}\n                                            bookName= {currData.name}\n                                            writerName= {currData.writerName}\n                                            timeRead= {currData.timeRead}\n                                            width= {280}\n                                            inLibrary= {inLibrary.status}\n                                            progress={inLibrary.progress}\n                                            libraryHandler={libraryHandler}\n                                        />\n                                    })\n                            }\n                        </Box>\n                    </Box>\n                })\n            }\n            </Box>\n        </Container>\n    );\n}\n\nexport default EntrepreneurComp;"]},"metadata":{},"sourceType":"module"}