{"ast":null,"code":"var _jsxFileName = \"/home/dattd/Desktop/BlinkListApp-React/src/Components/pages/MyLibrary/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useState } from 'react';\nimport { Container, Box } from '@mui/material';\nimport Typography from '../../atoms/Typography';\nimport Tab from '../../molecules/tabs';\nimport Card from '../../organisms/Card';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { Theme } from '../../../Themes/theme';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  cards: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap' // font:'Cera Pro',\n\n  }\n});\n\nconst MyLibrary = _ref => {\n  _s();\n\n  let {\n    books,\n    setBooks,\n    library,\n    setLibrary\n  } = _ref;\n  const classes = useStyle();\n  let data = library;\n  const tabData = [{\n    'value': 'reading',\n    'label': 'Currently reading'\n  }, {\n    'value': 'finished',\n    'label': 'Finished'\n  }];\n  const [currState, setCurrState] = useState(tabData[0].value);\n\n  const handleState = state => {\n    setCurrState(state);\n  };\n\n  const cards = () => {\n    if (books.length === 0) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {\n        \"data-testid\": \"circular-progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this);\n    } else {\n      if (currState === 'reading') {\n        return data.currentlyReading.map(curr => {\n          let currData = books[Number.parseInt(curr.id)];\n          return currData && /*#__PURE__*/_jsxDEV(Card, {\n            cardId: currData.id,\n            imgHeight: 240,\n            url: currData.url,\n            bookName: currData.name,\n            writerName: currData.writerName,\n            timeRead: currData.timeRead,\n            width: 280,\n            inLibrary: true,\n            progress: curr.progress,\n            \"data-testid\": \"cards-reading\"\n          }, currData.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 40\n          }, this);\n        });\n      } else if (currState === 'finished') {\n        return data.finishedBook.map(curr => {\n          let currData = books[Number.parseInt(curr.id)];\n          return /*#__PURE__*/_jsxDEV(Card, {\n            cardId: currData.id,\n            imgHeight: 240,\n            url: currData.url,\n            bookName: currData.name,\n            writerName: currData.writerName,\n            timeRead: currData.timeRead,\n            width: 280,\n            inLibrary: true,\n            progress: 100,\n            \"data-testid\": \"cards-finished\"\n          }, currData.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 28\n          }, this);\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      paddingTop: '50px',\n      marginBottom: '100px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant1: \"h5\",\n      theme: Theme,\n      mb: 4,\n      sx: {\n        display: 'flex',\n        justifyContent: 'start',\n        color: '#03314B',\n        fontStyle: 'Cera Pro',\n        fontSize: '36px'\n      },\n      children: \"My Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tab, {\n      stateHandler: handleState,\n      tabData: tabData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.cards,\n      mt: 4,\n      children: cards()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyLibrary, \"60IYnO+IFZ2JgAPSZUY/JAcd2u0=\", false, function () {\n  return [useStyle];\n});\n\n_c = MyLibrary;\nexport default MyLibrary;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyLibrary\");","map":{"version":3,"sources":["/home/dattd/Desktop/BlinkListApp-React/src/Components/pages/MyLibrary/index.tsx"],"names":["useState","Container","Box","Typography","Tab","Card","CircularProgress","Theme","makeStyles","useStyle","cards","display","alignItems","flexWrap","MyLibrary","books","setBooks","library","setLibrary","classes","data","tabData","currState","setCurrState","value","handleState","state","length","currentlyReading","map","curr","currData","Number","parseInt","id","url","name","writerName","timeRead","progress","finishedBook","paddingTop","marginBottom","justifyContent","color","fontStyle","fontSize"],"mappings":";;;AAAA;AAEA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,QAA6B,eAA7B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAAQC,KAAR,QAAoB,uBAApB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,QAAQ,GAAGD,UAAU,CAAC;AACxBE,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,QAAQ,EAAE,MAHP,CAIH;;AAJG;AADiB,CAAD,CAA3B;;AASA,MAAMC,SAAS,GAAG,QAA+C;AAAA;;AAAA,MAA9C;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,GAA8C;AAC7D,QAAMC,OAAO,GAAGV,QAAQ,EAAxB;AACA,MAAIW,IAAI,GAAGH,OAAX;AAEA,QAAMI,OAAO,GAAG,CACZ;AACE,aAAS,SADX;AAEE,aAAS;AAFX,GADY,EAKZ;AACE,aAAS,UADX;AAEE,aAAS;AAFX,GALY,CAAhB;AAUA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAACqB,OAAO,CAAC,CAAD,CAAP,CAAWG,KAAZ,CAA1C;;AACA,QAAMC,WAAW,GAAIC,KAAD,IAAkB;AAClCH,IAAAA,YAAY,CAACG,KAAD,CAAZ;AACH,GAFD;;AAIA,QAAMhB,KAAK,GAAG,MAAM;AAEhB,QAAGK,KAAK,CAACY,MAAN,KAAiB,CAApB,EAAsB;AAElB,0BAAQ,QAAC,gBAAD;AAAkB,uBAAY;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAHD,MAIK;AACD,UAAGL,SAAS,KAAK,SAAjB,EAA2B;AACvB,eAAOF,IAAI,CAACQ,gBAAL,CAAsBC,GAAtB,CAA2BC,IAAD,IAAc;AAC3C,cAAIC,QAAQ,GAAGhB,KAAK,CAACiB,MAAM,CAACC,QAAP,CAAgBH,IAAI,CAACI,EAArB,CAAD,CAApB;AACA,iBAAOH,QAAQ,iBAAI,QAAC,IAAD;AACf,YAAA,MAAM,EAAEA,QAAQ,CAACG,EADF;AAGf,YAAA,SAAS,EAAG,GAHG;AAIf,YAAA,GAAG,EAAGH,QAAQ,CAACI,GAJA;AAKf,YAAA,QAAQ,EAAGJ,QAAQ,CAACK,IALL;AAMf,YAAA,UAAU,EAAGL,QAAQ,CAACM,UANP;AAOf,YAAA,QAAQ,EAAGN,QAAQ,CAACO,QAPL;AAQf,YAAA,KAAK,EAAG,GARO;AASf,YAAA,SAAS,EAAG,IATG;AAUf,YAAA,QAAQ,EAAGR,IAAI,CAACS,QAVD;AAWf,2BAAY;AAXG,aAEVR,QAAQ,CAACG,EAFC;AAAA;AAAA;AAAA;AAAA,kBAAnB;AAaH,SAfM,CAAP;AAgBH,OAjBD,MAiBM,IAAGZ,SAAS,KAAK,UAAjB,EAA4B;AAC9B,eAAOF,IAAI,CAACoB,YAAL,CAAkBX,GAAlB,CAAuBC,IAAD,IAAc;AACvC,cAAIC,QAAQ,GAAGhB,KAAK,CAACiB,MAAM,CAACC,QAAP,CAAgBH,IAAI,CAACI,EAArB,CAAD,CAApB;AACA,8BAAO,QAAC,IAAD;AACH,YAAA,MAAM,EAAEH,QAAQ,CAACG,EADd;AAGH,YAAA,SAAS,EAAG,GAHT;AAIH,YAAA,GAAG,EAAGH,QAAQ,CAACI,GAJZ;AAKH,YAAA,QAAQ,EAAGJ,QAAQ,CAACK,IALjB;AAMH,YAAA,UAAU,EAAGL,QAAQ,CAACM,UANnB;AAOH,YAAA,QAAQ,EAAGN,QAAQ,CAACO,QAPjB;AAQH,YAAA,KAAK,EAAG,GARL;AASH,YAAA,SAAS,EAAG,IATT;AAUH,YAAA,QAAQ,EAAG,GAVR;AAWH,2BAAY;AAXT,aAEEP,QAAQ,CAACG,EAFX;AAAA;AAAA;AAAA;AAAA,kBAAP;AAaH,SAfM,CAAP;AAgBH;AACJ;AACJ,GA3CD;;AAgDA,sBACI,QAAC,SAAD;AAAW,IAAA,EAAE,EAAE;AAACO,MAAAA,UAAU,EAAE,MAAb;AAAqBC,MAAAA,YAAY,EAAC;AAAlC,KAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAC,IAArB;AAA0B,MAAA,KAAK,EAAEnC,KAAjC;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAgD,MAAA,EAAE,EAAE;AAACI,QAAAA,OAAO,EAAC,MAAT;AAAgBgC,QAAAA,cAAc,EAAC,OAA/B;AAAwCC,QAAAA,KAAK,EAAC,SAA9C;AAAyDC,QAAAA,SAAS,EAAC,UAAnE;AAA8EC,QAAAA,QAAQ,EAAC;AAAvF,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,GAAD;AAAK,MAAA,YAAY,EAAErB,WAAnB;AAAgC,MAAA,OAAO,EAAEJ;AAAzC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEF,OAAO,CAACT,KAAxB;AAA+B,MAAA,EAAE,EAAE,CAAnC;AAAA,gBAEQA,KAAK;AAFb;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAhFD;;GAAMI,S;UACcL,Q;;;KADdK,S;AAkFN,eAAeA,SAAf","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport {useState} from 'react';\nimport {Container, Box} from '@mui/material';\nimport Typography from '../../atoms/Typography';\nimport Tab from '../../molecules/tabs';\nimport Card from '../../organisms/Card';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport {Theme} from '../../../Themes/theme';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyle = makeStyles({\n    cards: {\n        display: 'flex', \n        alignItems: 'center', \n        flexWrap: 'wrap',\n        // font:'Cera Pro',\n    }\n});\n\nconst MyLibrary = ({books, setBooks, library, setLibrary}:any) =>{\n    const classes = useStyle();\n    let data = library;\n    \n    const tabData = [\n        { \n          'value': 'reading',\n          'label': 'Currently reading',\n        },\n        { \n          'value': 'finished',\n          'label': 'Finished',\n        }\n    ]\n    const [currState, setCurrState] = useState(tabData[0].value);\n    const handleState = (state:string) => {\n        setCurrState(state);\n    }\n\n    const cards = () => {\n\n        if(books.length === 0){\n\n            return  <CircularProgress data-testid='circular-progress'/>\n        }\n        else {\n            if(currState === 'reading'){\n                return data.currentlyReading.map((curr:any) => {\n                    let currData = books[Number.parseInt(curr.id)];\n                    return currData && <Card \n                        cardId={currData.id}\n                        key={currData.id}\n                        imgHeight= {240}\n                        url= {currData.url}\n                        bookName= {currData.name}\n                        writerName= {currData.writerName}\n                        timeRead= {currData.timeRead}\n                        width= {280}\n                        inLibrary= {true}\n                        progress= {curr.progress}\n                        data-testid='cards-reading'\n                    />\n                })\n            }else if(currState === 'finished'){\n                return data.finishedBook.map((curr:any) => {\n                    let currData = books[Number.parseInt(curr.id)];\n                    return <Card \n                        cardId={currData.id}\n                        key={currData.id}\n                        imgHeight= {240}\n                        url= {currData.url}\n                        bookName= {currData.name}\n                        writerName= {currData.writerName}\n                        timeRead= {currData.timeRead}\n                        width= {280}\n                        inLibrary= {true}\n                        progress= {100}\n                        data-testid='cards-finished'\n                    />\n                });\n            }\n        }\n    }\n\n\n    \n\n    return (\n        <Container sx={{paddingTop: '50px', marginBottom:'100px'}}>\n            <Typography variant1=\"h5\" theme={Theme} mb={4}  sx={{display:'flex',justifyContent:'start', color:'#03314B', fontStyle:'Cera Pro',fontSize:'36px'}}>\n                My Library\n            </Typography>\n            <Tab stateHandler={handleState} tabData={tabData} />\n            <Box className={classes.cards} mt={4}>\n                { \n                    cards()\n                }\n            </Box>\n        </Container>\n    );\n}\n\nexport default MyLibrary;"]},"metadata":{},"sourceType":"module"}